/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.ui.wizard

import org.eclipse.jdt.core.JavaCore
import org.eclipse.xtext.ui.XtextProjectHelper
import org.eclipse.xtext.ui.util.PluginProjectFactory
import org.eclipse.xtext.ui.wizard.template.IProjectGenerator
import org.eclipse.xtext.ui.wizard.template.IProjectTemplateProvider
import org.eclipse.xtext.ui.wizard.template.ProjectTemplate
import org.xtext.example.mydsl.ui.wizard.templates.AppTemplates

/**
 * Create a list with all project templates to be shown in the template new project wizard.
 * 
 * Each template is able to generate one or more projects. Each project can be configured such that any number of files are included.
 */
class MyDslProjectTemplateProvider implements IProjectTemplateProvider {
    override getProjectTemplates() {
        #[
            new EmptyProject,
            new HelloWorldProject, 
            new AddTwoIntegersProject,
            new FunctionCallProject
        ]
    }
}

@ProjectTemplate(label="Empty Project", icon="project_template.png", description="<p><b>Empty Project</b></p>
<p>Just creates an empty project structure.</p>")
final class EmptyProject {
    override generateProjects(IProjectGenerator generator) {
        generator.generate(new PluginProjectFactory => [
            projectName = projectInfo.projectName
            location = projectInfo.locationPath
            projectNatures += #[JavaCore.NATURE_ID, "org.eclipse.pde.PluginNature", XtextProjectHelper.NATURE_ID]
            builderIds += #[JavaCore.BUILDER_ID, XtextProjectHelper.BUILDER_ID]
            folders += "src"
            
            addFile('''src/«projectInfo.projectName».mydsl''', AppTemplates.emptyTemplate)
        ])
    }
}

@ProjectTemplate(label="Hello World", icon="project_template.png", description="<p><b>Hello World Sample</b></p>
<p>This is a parameterized hello world for MyDsl. You can set a parameter to modify the content in the generated file
and a parameter to set the package the file is created in.</p>")
final class HelloWorldProject {
    override generateProjects(IProjectGenerator generator) {
        generator.generate(new PluginProjectFactory => [
            projectName = projectInfo.projectName
            location = projectInfo.locationPath
            projectNatures += #[JavaCore.NATURE_ID, "org.eclipse.pde.PluginNature", XtextProjectHelper.NATURE_ID]
            builderIds += #[JavaCore.BUILDER_ID, XtextProjectHelper.BUILDER_ID]
            folders += "src"
            
            addFile('''src/HelloWorld.mydsl''', AppTemplates.helloWorldTemplate)
        ])
    }
}

@ProjectTemplate(label="Add Two Integers", icon="project_template.png", description="<p><b>Add Two Integers Sample</b></p>
<p>Implements operand summary operation in one task</p>")
final class AddTwoIntegersProject {
    override generateProjects(IProjectGenerator generator) {
        generator.generate(new PluginProjectFactory => [
            projectName = projectInfo.projectName
            location = projectInfo.locationPath
            projectNatures += #[JavaCore.NATURE_ID, "org.eclipse.pde.PluginNature", XtextProjectHelper.NATURE_ID]
            builderIds += #[JavaCore.BUILDER_ID, XtextProjectHelper.BUILDER_ID]
            folders += "src"
            
            addFile('''src/AddTwoIntegers.mydsl''', AppTemplates.addTwoIntegers)
        ])
    }
}

@ProjectTemplate(label="Function Call", icon="project_template.png", description="<p><b>Function Call Sample</b></p>
<p>Implements different function calls from different tasks</p>")
final class FunctionCallProject {
    override generateProjects(IProjectGenerator generator) {
        generator.generate(new PluginProjectFactory => [
            projectName = projectInfo.projectName
            location = projectInfo.locationPath
            projectNatures += #[JavaCore.NATURE_ID, "org.eclipse.pde.PluginNature", XtextProjectHelper.NATURE_ID]
            builderIds += #[JavaCore.BUILDER_ID, XtextProjectHelper.BUILDER_ID]
            folders += "src"
            
            addFile('''src/FunctionCall.mydsl''', AppTemplates.functionCallTemplate)
        ])
    }
}

