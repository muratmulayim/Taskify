/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.ArrayDimension;
import org.xtext.example.mydsl.myDsl.ArrayReference;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.VariableSymbol;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Array Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ArrayReferenceImpl#getVariableReference <em>Variable Reference</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ArrayReferenceImpl#getDimension <em>Dimension</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArrayReferenceImpl extends AtomicImpl implements ArrayReference
{
  /**
   * The cached value of the '{@link #getVariableReference() <em>Variable Reference</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariableReference()
   * @generated
   * @ordered
   */
  protected VariableSymbol variableReference;

  /**
   * The cached value of the '{@link #getDimension() <em>Dimension</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDimension()
   * @generated
   * @ordered
   */
  protected EList<ArrayDimension> dimension;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArrayReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.ARRAY_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableSymbol getVariableReference()
  {
    if (variableReference != null && variableReference.eIsProxy())
    {
      InternalEObject oldVariableReference = (InternalEObject)variableReference;
      variableReference = (VariableSymbol)eResolveProxy(oldVariableReference);
      if (variableReference != oldVariableReference)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE, oldVariableReference, variableReference));
      }
    }
    return variableReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableSymbol basicGetVariableReference()
  {
    return variableReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariableReference(VariableSymbol newVariableReference)
  {
    VariableSymbol oldVariableReference = variableReference;
    variableReference = newVariableReference;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE, oldVariableReference, variableReference));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ArrayDimension> getDimension()
  {
    if (dimension == null)
    {
      dimension = new EObjectContainmentEList<ArrayDimension>(ArrayDimension.class, this, MyDslPackage.ARRAY_REFERENCE__DIMENSION);
    }
    return dimension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.ARRAY_REFERENCE__DIMENSION:
        return ((InternalEList<?>)getDimension()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE:
        if (resolve) return getVariableReference();
        return basicGetVariableReference();
      case MyDslPackage.ARRAY_REFERENCE__DIMENSION:
        return getDimension();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE:
        setVariableReference((VariableSymbol)newValue);
        return;
      case MyDslPackage.ARRAY_REFERENCE__DIMENSION:
        getDimension().clear();
        getDimension().addAll((Collection<? extends ArrayDimension>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE:
        setVariableReference((VariableSymbol)null);
        return;
      case MyDslPackage.ARRAY_REFERENCE__DIMENSION:
        getDimension().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.ARRAY_REFERENCE__VARIABLE_REFERENCE:
        return variableReference != null;
      case MyDslPackage.ARRAY_REFERENCE__DIMENSION:
        return dimension != null && !dimension.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ArrayReferenceImpl
