/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "InkApp";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleInkApp
entryRuleInkApp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInkAppRule()); }
	iv_ruleInkApp=ruleInkApp
	{ $current=$iv_ruleInkApp.current; }
	EOF;

// Rule InkApp
ruleInkApp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInkAppAccess().getGlobalsGlobalVariableExpressionParserRuleCall_0_0());
				}
				lv_globals_0_0=ruleGlobalVariableExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInkAppRule());
					}
					add(
						$current,
						"globals",
						lv_globals_0_0,
						"org.xtext.example.mydsl.MyDsl.GlobalVariableExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInkAppAccess().getTasksTaskParserRuleCall_1_0());
				}
				lv_tasks_1_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInkAppRule());
					}
					add(
						$current,
						"tasks",
						lv_tasks_1_0,
						"org.xtext.example.mydsl.MyDsl.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInkAppAccess().getEntryEntryTaskParserRuleCall_2_0());
				}
				lv_entry_2_0=ruleEntryTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInkAppRule());
					}
					set(
						$current,
						"entry",
						lv_entry_2_0,
						"org.xtext.example.mydsl.MyDsl.EntryTask");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current.getText(); }
	EOF;

// Rule Operator
ruleOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getHyphenMinusKeyword_0());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getPlusSignKeyword_1());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getSolidusKeyword_2());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getAsteriskKeyword_3());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_6());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_7());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getLessThanSignKeyword_8());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_9());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getEqualsSignKeyword_10());
		}
		    |
		kw='AND'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getANDKeyword_11());
		}
		    |
		kw='OR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperatorAccess().getORKeyword_12());
		}
	)
;

// Entry rule entryRuleBuiltinFunctions
entryRuleBuiltinFunctions returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBuiltinFunctionsRule()); }
	iv_ruleBuiltinFunctions=ruleBuiltinFunctions
	{ $current=$iv_ruleBuiltinFunctions.current.getText(); }
	EOF;

// Rule BuiltinFunctions
ruleBuiltinFunctions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='print'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getBuiltinFunctionsAccess().getPrintKeyword());
	}
;

// Entry rule entryRuleBreakExpression
entryRuleBreakExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakExpressionRule()); }
	iv_ruleBreakExpression=ruleBreakExpression
	{ $current=$iv_ruleBreakExpression.current; }
	EOF;

// Rule BreakExpression
ruleBreakExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBreakExpressionAccess().getBreakExpressionAction_0(),
					$current);
			}
		)
		(
			(
				lv_break_1_0='break'
				{
					newLeafNode(lv_break_1_0, grammarAccess.getBreakExpressionAccess().getBreakBreakKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBreakExpressionRule());
					}
					setWithLastConsumed($current, "break", lv_break_1_0, "break");
				}
			)
		)
	)
;

// Entry rule entryRuleVariableType
entryRuleVariableType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableTypeRule()); }
	iv_ruleVariableType=ruleVariableType
	{ $current=$iv_ruleVariableType.current; }
	EOF;

// Rule VariableType
ruleVariableType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableTypeAccess().getVariableTypeAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_type_1_1='string'
					{
						newLeafNode(lv_type_1_1, grammarAccess.getVariableTypeAccess().getTypeStringKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableTypeRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_1, null);
					}
					    |
					lv_type_1_2='integer'
					{
						newLeafNode(lv_type_1_2, grammarAccess.getVariableTypeAccess().getTypeIntegerKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableTypeRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_2, null);
					}
					    |
					lv_type_1_3='boolean'
					{
						newLeafNode(lv_type_1_3, grammarAccess.getVariableTypeAccess().getTypeBooleanKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableTypeRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_3, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleGlobalVariableExpression
entryRuleGlobalVariableExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalVariableExpressionRule()); }
	iv_ruleGlobalVariableExpression=ruleGlobalVariableExpression
	{ $current=$iv_ruleGlobalVariableExpression.current; }
	EOF;

// Rule GlobalVariableExpression
ruleGlobalVariableExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGlobalVariableExpressionAccess().getGlobalVariableExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='GLOBAL'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalVariableExpressionAccess().getGLOBALKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalVariableExpressionAccess().getVariableVariableDeclerationExpressionParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableDeclerationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalVariableExpressionRule());
					}
					set(
						$current,
						"variable",
						lv_variable_2_0,
						"org.xtext.example.mydsl.MyDsl.VariableDeclerationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEntryTask
entryRuleEntryTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntryTaskRule()); }
	iv_ruleEntryTask=ruleEntryTask
	{ $current=$iv_ruleEntryTask.current; }
	EOF;

// Rule EntryTask
ruleEntryTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entry'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntryTaskAccess().getEntryKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntryTaskAccess().getTaskTaskParserRuleCall_1_0());
				}
				lv_task_1_0=ruleTask
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntryTaskRule());
					}
					set(
						$current,
						"task",
						lv_task_1_0,
						"org.xtext.example.mydsl.MyDsl.Task");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTaskAccess().getTaskAction_0(),
					$current);
			}
		)
		otherlv_1='task'
		{
			newLeafNode(otherlv_1, grammarAccess.getTaskAccess().getTaskKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskAccess().getTaskbodyTaskBodyParserRuleCall_4_0());
				}
				lv_taskbody_4_0=ruleTaskBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskRule());
					}
					set(
						$current,
						"taskbody",
						lv_taskbody_4_0,
						"org.xtext.example.mydsl.MyDsl.TaskBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleIfExpression
entryRuleIfExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfExpressionRule()); }
	iv_ruleIfExpression=ruleIfExpression
	{ $current=$iv_ruleIfExpression.current; }
	EOF;

// Rule IfExpression
ruleIfExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfExpressionAccess().getIfExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfExpressionAccess().getIfKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getIfconditionOperationExpressionParserRuleCall_3_0());
				}
				lv_ifcondition_3_0=ruleOperationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"ifcondition",
						lv_ifcondition_3_0,
						"org.xtext.example.mydsl.MyDsl.OperationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfExpressionAccess().getIfbodyStatementBodyParserRuleCall_6_0());
				}
				lv_ifbody_6_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
					}
					set(
						$current,
						"ifbody",
						lv_ifbody_6_0,
						"org.xtext.example.mydsl.MyDsl.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_8='else'
			{
				newLeafNode(otherlv_8, grammarAccess.getIfExpressionAccess().getElseKeyword_8_0());
			}
			otherlv_9='if'
			{
				newLeafNode(otherlv_9, grammarAccess.getIfExpressionAccess().getIfKeyword_8_1());
			}
			otherlv_10='('
			{
				newLeafNode(otherlv_10, grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_8_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpressionAccess().getElseifconditionOperationExpressionParserRuleCall_8_3_0());
					}
					lv_elseifcondition_11_0=ruleOperationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
						}
						add(
							$current,
							"elseifcondition",
							lv_elseifcondition_11_0,
							"org.xtext.example.mydsl.MyDsl.OperationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12=')'
			{
				newLeafNode(otherlv_12, grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_8_4());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_8_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpressionAccess().getElseifbodyStatementBodyParserRuleCall_8_6_0());
					}
					lv_elseifbody_14_0=ruleStatementBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
						}
						add(
							$current,
							"elseifbody",
							lv_elseifbody_14_0,
							"org.xtext.example.mydsl.MyDsl.StatementBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_8_7());
			}
		)*
		(
			otherlv_16='else'
			{
				newLeafNode(otherlv_16, grammarAccess.getIfExpressionAccess().getElseKeyword_9_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfExpressionAccess().getElsebodyStatementBodyParserRuleCall_9_2_0());
					}
					lv_elsebody_18_0=ruleStatementBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfExpressionRule());
						}
						set(
							$current,
							"elsebody",
							lv_elsebody_18_0,
							"org.xtext.example.mydsl.MyDsl.StatementBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_19='}'
			{
				newLeafNode(otherlv_19, grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_9_3());
			}
		)?
	)
;

// Entry rule entryRuleForExpression
entryRuleForExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForExpressionRule()); }
	iv_ruleForExpression=ruleForExpression
	{ $current=$iv_ruleForExpression.current; }
	EOF;

// Rule ForExpression
ruleForExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForExpressionAccess().getForExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getForExpressionAccess().getForKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getForExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getInitialOperationExpressionParserRuleCall_3_0());
				}
				lv_initial_3_0=ruleOperationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"initial",
						lv_initial_3_0,
						"org.xtext.example.mydsl.MyDsl.OperationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getForExpressionAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getTestOperationExpressionParserRuleCall_5_0());
				}
				lv_test_5_0=ruleOperationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"test",
						lv_test_5_0,
						"org.xtext.example.mydsl.MyDsl.OperationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getForExpressionAccess().getSemicolonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getUpdateOperationExpressionParserRuleCall_7_0());
				}
				lv_update_7_0=ruleOperationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"update",
						lv_update_7_0,
						"org.xtext.example.mydsl.MyDsl.OperationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getForExpressionAccess().getRightParenthesisKeyword_8());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getForExpressionAccess().getLeftCurlyBracketKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForExpressionAccess().getBodyStatementBodyParserRuleCall_10_0());
				}
				lv_body_10_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_10_0,
						"org.xtext.example.mydsl.MyDsl.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getForExpressionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileExpressionRule()); }
	iv_ruleWhileExpression=ruleWhileExpression
	{ $current=$iv_ruleWhileExpression.current; }
	EOF;

// Rule WhileExpression
ruleWhileExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileExpressionAccess().getWhileKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getTestOperationExpressionParserRuleCall_3_0());
				}
				lv_test_3_0=ruleOperationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					set(
						$current,
						"test",
						lv_test_3_0,
						"org.xtext.example.mydsl.MyDsl.OperationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhileExpressionAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileExpressionAccess().getBodyStatementBodyParserRuleCall_6_0());
				}
				lv_body_6_0=ruleStatementBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileExpressionRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"org.xtext.example.mydsl.MyDsl.StatementBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getWhileExpressionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleBuiltinFunctionCallExpression
entryRuleBuiltinFunctionCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuiltinFunctionCallExpressionRule()); }
	iv_ruleBuiltinFunctionCallExpression=ruleBuiltinFunctionCallExpression
	{ $current=$iv_ruleBuiltinFunctionCallExpression.current; }
	EOF;

// Rule BuiltinFunctionCallExpression
ruleBuiltinFunctionCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBuiltinFunctionCallExpressionAccess().getBuiltinFunctionCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBuiltinFunctionCallExpressionAccess().getFunctionBuiltinFunctionsParserRuleCall_1_0());
				}
				lv_function_1_0=ruleBuiltinFunctions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuiltinFunctionCallExpressionRule());
					}
					set(
						$current,
						"function",
						lv_function_1_0,
						"org.xtext.example.mydsl.MyDsl.BuiltinFunctions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getBuiltinFunctionCallExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleAtomic
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBuiltinFunctionCallExpressionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"org.xtext.example.mydsl.MyDsl.Atomic");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getBuiltinFunctionCallExpressionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBuiltinFunctionCallExpressionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"org.xtext.example.mydsl.MyDsl.Atomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getBuiltinFunctionCallExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTaskBody
entryRuleTaskBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskBodyRule()); }
	iv_ruleTaskBody=ruleTaskBody
	{ $current=$iv_ruleTaskBody.current; }
	EOF;

// Rule TaskBody
ruleTaskBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTaskBodyAccess().getTaskBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskBodyAccess().getBodyVariableDeclerationExpressionParserRuleCall_1_0());
				}
				lv_body_1_0=ruleVariableDeclerationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskBodyRule());
					}
					add(
						$current,
						"body",
						lv_body_1_0,
						"org.xtext.example.mydsl.MyDsl.VariableDeclerationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTaskBodyAccess().getBodyBlockExpressionsParserRuleCall_2_0());
				}
				lv_body_2_0=ruleBlockExpressions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTaskBodyRule());
					}
					add(
						$current,
						"body",
						lv_body_2_0,
						"org.xtext.example.mydsl.MyDsl.BlockExpressions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				otherlv_3='next'
				{
					newLeafNode(otherlv_3, grammarAccess.getTaskBodyAccess().getNextKeyword_3_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTaskBodyRule());
							}
						}
						otherlv_4=RULE_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getTaskBodyAccess().getNexttaskTaskCrossReference_3_0_1_0());
						}
					)
				)
			)
			    |
			(
				(
					lv_endtask_5_0='end'
					{
						newLeafNode(lv_endtask_5_0, grammarAccess.getTaskBodyAccess().getEndtaskEndKeyword_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTaskBodyRule());
						}
						setWithLastConsumed($current, "endtask", lv_endtask_5_0, "end");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStatementBody
entryRuleStatementBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementBodyRule()); }
	iv_ruleStatementBody=ruleStatementBody
	{ $current=$iv_ruleStatementBody.current; }
	EOF;

// Rule StatementBody
ruleStatementBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementBodyAccess().getStatementBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementBodyAccess().getBodyBlockExpressionsParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBlockExpressions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementBodyRule());
					}
					add(
						$current,
						"body",
						lv_body_1_0,
						"org.xtext.example.mydsl.MyDsl.BlockExpressions");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementBodyAccess().getBodyBreakExpressionParserRuleCall_2_0());
				}
				lv_body_2_0=ruleBreakExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementBodyRule());
					}
					add(
						$current,
						"body",
						lv_body_2_0,
						"org.xtext.example.mydsl.MyDsl.BreakExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleBlockExpressions
entryRuleBlockExpressions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockExpressionsRule()); }
	iv_ruleBlockExpressions=ruleBlockExpressions
	{ $current=$iv_ruleBlockExpressions.current; }
	EOF;

// Rule BlockExpressions
ruleBlockExpressions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBlockExpressionsAccess().getOperationExpressionParserRuleCall_0());
		}
		this_OperationExpression_0=ruleOperationExpression
		{
			$current = $this_OperationExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockExpressionsAccess().getIfExpressionParserRuleCall_1());
		}
		this_IfExpression_1=ruleIfExpression
		{
			$current = $this_IfExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockExpressionsAccess().getForExpressionParserRuleCall_2());
		}
		this_ForExpression_2=ruleForExpression
		{
			$current = $this_ForExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockExpressionsAccess().getWhileExpressionParserRuleCall_3());
		}
		this_WhileExpression_3=ruleWhileExpression
		{
			$current = $this_WhileExpression_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBlockExpressionsAccess().getBuiltinFunctionCallExpressionParserRuleCall_4());
		}
		this_BuiltinFunctionCallExpression_4=ruleBuiltinFunctionCallExpression
		{
			$current = $this_BuiltinFunctionCallExpression_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperationExpression
entryRuleOperationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationExpressionRule()); }
	iv_ruleOperationExpression=ruleOperationExpression
	{ $current=$iv_ruleOperationExpression.current; }
	EOF;

// Rule OperationExpression
ruleOperationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getOperationExpressionAccess().getOperationParserRuleCall());
	}
	this_Operation_0=ruleOperation
	{
		$current = $this_Operation_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getAtomicParserRuleCall_0());
		}
		this_Atomic_0=ruleAtomic
		{
			$current = $this_Atomic_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOperationAccess().getOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAccess().getOperatorOperatorParserRuleCall_1_1_0_0());
						}
						lv_operator_2_0=ruleOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationRule());
							}
							add(
								$current,
								"operator",
								lv_operator_2_0,
								"org.xtext.example.mydsl.MyDsl.Operator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getOperationAccess().getRightAtomicParserRuleCall_1_1_1_0());
						}
						lv_right_3_0=ruleAtomic
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperationRule());
							}
							add(
								$current,
								"right",
								lv_right_3_0,
								"org.xtext.example.mydsl.MyDsl.Atomic");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleArrayDimension
entryRuleArrayDimension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayDimensionRule()); }
	iv_ruleArrayDimension=ruleArrayDimension
	{ $current=$iv_ruleArrayDimension.current; }
	EOF;

// Rule ArrayDimension
ruleArrayDimension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayDimensionAccess().getArrayDimensionAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayDimensionAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayDimensionRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolCrossReference_2_0_0());
					}
				)
			)
			    |
			(
				(
					lv_size_3_0=RULE_INT
					{
						newLeafNode(lv_size_3_0, grammarAccess.getArrayDimensionAccess().getSizeINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArrayDimensionRule());
						}
						setWithLastConsumed(
							$current,
							"size",
							lv_size_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayDimensionAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleVariableDeclerationExpression
entryRuleVariableDeclerationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclerationExpressionRule()); }
	iv_ruleVariableDeclerationExpression=ruleVariableDeclerationExpression
	{ $current=$iv_ruleVariableDeclerationExpression.current; }
	EOF;

// Rule VariableDeclerationExpression
ruleVariableDeclerationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclerationExpressionAccess().getTypeVariableTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclerationExpressionRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl.MyDsl.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_name_1_0=RULE_ID
					{
						newLeafNode(lv_name_1_0, grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDeclerationExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			    |
			(
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableDeclerationExpressionRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"org.eclipse.xtext.common.Terminals.ID");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionArrayDimensionParserRuleCall_1_1_1_0());
						}
						lv_dimension_3_0=ruleArrayDimension
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableDeclerationExpressionRule());
							}
							add(
								$current,
								"dimension",
								lv_dimension_3_0,
								"org.xtext.example.mydsl.MyDsl.ArrayDimension");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
		)
	)
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getIntegerReferenceAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getDoubleReferenceAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_DOUBLE
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.xtext.example.mydsl.MyDsl.DOUBLE");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getStringReferenceAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_value_5_0=RULE_STRING
					{
						newLeafNode(lv_value_5_0, grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getBooleanReferenceAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_7_0=RULE_BOOLEAN
					{
						newLeafNode(lv_value_7_0, grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_7_0,
							"org.xtext.example.mydsl.MyDsl.BOOLEAN");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getArrayReferenceAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_4_1_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getDimensionArrayDimensionParserRuleCall_4_2_0());
					}
					lv_dimension_10_0=ruleArrayDimension
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						add(
							$current,
							"dimension",
							lv_dimension_10_0,
							"org.xtext.example.mydsl.MyDsl.ArrayDimension");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getVariableReferenceAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_5_1_0());
					}
				)
			)
		)
	)
;

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
