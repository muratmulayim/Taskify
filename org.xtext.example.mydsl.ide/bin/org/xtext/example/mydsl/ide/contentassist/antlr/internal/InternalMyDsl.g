/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInkApp
entryRuleInkApp
:
{ before(grammarAccess.getInkAppRule()); }
	 ruleInkApp
{ after(grammarAccess.getInkAppRule()); } 
	 EOF 
;

// Rule InkApp
ruleInkApp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInkAppAccess().getGroup()); }
		(rule__InkApp__Group__0)
		{ after(grammarAccess.getInkAppAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinFunctions
entryRuleBuiltinFunctions
:
{ before(grammarAccess.getBuiltinFunctionsRule()); }
	 ruleBuiltinFunctions
{ after(grammarAccess.getBuiltinFunctionsRule()); } 
	 EOF 
;

// Rule BuiltinFunctions
ruleBuiltinFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinFunctionsAccess().getPrintKeyword()); }
		'print'
		{ after(grammarAccess.getBuiltinFunctionsAccess().getPrintKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakExpression
entryRuleBreakExpression
:
{ before(grammarAccess.getBreakExpressionRule()); }
	 ruleBreakExpression
{ after(grammarAccess.getBreakExpressionRule()); } 
	 EOF 
;

// Rule BreakExpression
ruleBreakExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakExpressionAccess().getGroup()); }
		(rule__BreakExpression__Group__0)
		{ after(grammarAccess.getBreakExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableType
entryRuleVariableType
:
{ before(grammarAccess.getVariableTypeRule()); }
	 ruleVariableType
{ after(grammarAccess.getVariableTypeRule()); } 
	 EOF 
;

// Rule VariableType
ruleVariableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTypeAccess().getGroup()); }
		(rule__VariableType__Group__0)
		{ after(grammarAccess.getVariableTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVariableExpression
entryRuleGlobalVariableExpression
:
{ before(grammarAccess.getGlobalVariableExpressionRule()); }
	 ruleGlobalVariableExpression
{ after(grammarAccess.getGlobalVariableExpressionRule()); } 
	 EOF 
;

// Rule GlobalVariableExpression
ruleGlobalVariableExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVariableExpressionAccess().getGroup()); }
		(rule__GlobalVariableExpression__Group__0)
		{ after(grammarAccess.getGlobalVariableExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryTask
entryRuleEntryTask
:
{ before(grammarAccess.getEntryTaskRule()); }
	 ruleEntryTask
{ after(grammarAccess.getEntryTaskRule()); } 
	 EOF 
;

// Rule EntryTask
ruleEntryTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryTaskAccess().getGroup()); }
		(rule__EntryTask__Group__0)
		{ after(grammarAccess.getEntryTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForExpression
entryRuleForExpression
:
{ before(grammarAccess.getForExpressionRule()); }
	 ruleForExpression
{ after(grammarAccess.getForExpressionRule()); } 
	 EOF 
;

// Rule ForExpression
ruleForExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForExpressionAccess().getGroup()); }
		(rule__ForExpression__Group__0)
		{ after(grammarAccess.getForExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression
:
{ before(grammarAccess.getWhileExpressionRule()); }
	 ruleWhileExpression
{ after(grammarAccess.getWhileExpressionRule()); } 
	 EOF 
;

// Rule WhileExpression
ruleWhileExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getGroup()); }
		(rule__WhileExpression__Group__0)
		{ after(grammarAccess.getWhileExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinFunctionCallExpression
entryRuleBuiltinFunctionCallExpression
:
{ before(grammarAccess.getBuiltinFunctionCallExpressionRule()); }
	 ruleBuiltinFunctionCallExpression
{ after(grammarAccess.getBuiltinFunctionCallExpressionRule()); } 
	 EOF 
;

// Rule BuiltinFunctionCallExpression
ruleBuiltinFunctionCallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup()); }
		(rule__BuiltinFunctionCallExpression__Group__0)
		{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTaskBody
entryRuleTaskBody
:
{ before(grammarAccess.getTaskBodyRule()); }
	 ruleTaskBody
{ after(grammarAccess.getTaskBodyRule()); } 
	 EOF 
;

// Rule TaskBody
ruleTaskBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskBodyAccess().getGroup()); }
		(rule__TaskBody__Group__0)
		{ after(grammarAccess.getTaskBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementBody
entryRuleStatementBody
:
{ before(grammarAccess.getStatementBodyRule()); }
	 ruleStatementBody
{ after(grammarAccess.getStatementBodyRule()); } 
	 EOF 
;

// Rule StatementBody
ruleStatementBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementBodyAccess().getGroup()); }
		(rule__StatementBody__Group__0)
		{ after(grammarAccess.getStatementBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockExpressions
entryRuleBlockExpressions
:
{ before(grammarAccess.getBlockExpressionsRule()); }
	 ruleBlockExpressions
{ after(grammarAccess.getBlockExpressionsRule()); } 
	 EOF 
;

// Rule BlockExpressions
ruleBlockExpressions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getAlternatives()); }
		(rule__BlockExpressions__Alternatives)
		{ after(grammarAccess.getBlockExpressionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationExpression
entryRuleOperationExpression
:
{ before(grammarAccess.getOperationExpressionRule()); }
	 ruleOperationExpression
{ after(grammarAccess.getOperationExpressionRule()); } 
	 EOF 
;

// Rule OperationExpression
ruleOperationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationExpressionAccess().getOperationParserRuleCall()); }
		ruleOperation
		{ after(grammarAccess.getOperationExpressionAccess().getOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayDimension
entryRuleArrayDimension
:
{ before(grammarAccess.getArrayDimensionRule()); }
	 ruleArrayDimension
{ after(grammarAccess.getArrayDimensionRule()); } 
	 EOF 
;

// Rule ArrayDimension
ruleArrayDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getGroup()); }
		(rule__ArrayDimension__Group__0)
		{ after(grammarAccess.getArrayDimensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclerationExpression
entryRuleVariableDeclerationExpression
:
{ before(grammarAccess.getVariableDeclerationExpressionRule()); }
	 ruleVariableDeclerationExpression
{ after(grammarAccess.getVariableDeclerationExpressionRule()); } 
	 EOF 
;

// Rule VariableDeclerationExpression
ruleVariableDeclerationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getGroup()); }
		(rule__VariableDeclerationExpression__Group__0)
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_0()); }
		'-'
		{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_2()); }
		'/'
		{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_3()); }
		'*'
		{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_6()); }
		'=='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
		'!='
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_8()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_9()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_10()); }
		'='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getANDKeyword_11()); }
		'AND'
		{ after(grammarAccess.getOperatorAccess().getANDKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getORKeyword_12()); }
		'OR'
		{ after(grammarAccess.getOperatorAccess().getORKeyword_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTypeAccess().getTypeStringKeyword_1_0_0()); }
		'string'
		{ after(grammarAccess.getVariableTypeAccess().getTypeStringKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getTypeIntegerKeyword_1_0_1()); }
		'integer'
		{ after(grammarAccess.getVariableTypeAccess().getTypeIntegerKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getTypeBooleanKeyword_1_0_2()); }
		'boolean'
		{ after(grammarAccess.getVariableTypeAccess().getTypeBooleanKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskBodyAccess().getGroup_3_0()); }
		(rule__TaskBody__Group_3_0__0)
		{ after(grammarAccess.getTaskBodyAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskBodyAccess().getEndtaskAssignment_3_1()); }
		(rule__TaskBody__EndtaskAssignment_3_1)
		{ after(grammarAccess.getTaskBodyAccess().getEndtaskAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpressions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getOperationExpressionParserRuleCall_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getBlockExpressionsAccess().getOperationExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getIfExpressionParserRuleCall_1()); }
		ruleIfExpression
		{ after(grammarAccess.getBlockExpressionsAccess().getIfExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getForExpressionParserRuleCall_2()); }
		ruleForExpression
		{ after(grammarAccess.getBlockExpressionsAccess().getForExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getWhileExpressionParserRuleCall_3()); }
		ruleWhileExpression
		{ after(grammarAccess.getBlockExpressionsAccess().getWhileExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBlockExpressionsAccess().getBuiltinFunctionCallExpressionParserRuleCall_4()); }
		ruleBuiltinFunctionCallExpression
		{ after(grammarAccess.getBlockExpressionsAccess().getBuiltinFunctionCallExpressionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getIndexAssignment_2_0()); }
		(rule__ArrayDimension__IndexAssignment_2_0)
		{ after(grammarAccess.getArrayDimensionAccess().getIndexAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayDimensionAccess().getSizeAssignment_2_1()); }
		(rule__ArrayDimension__SizeAssignment_2_1)
		{ after(grammarAccess.getArrayDimensionAccess().getSizeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getNameAssignment_1_0()); }
		(rule__VariableDeclerationExpression__NameAssignment_1_0)
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getGroup_1_1()); }
		(rule__VariableDeclerationExpression__Group_1_1__0)
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__0__Impl
	rule__InkApp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getGlobalsAssignment_0()); }
	(rule__InkApp__GlobalsAssignment_0)*
	{ after(grammarAccess.getInkAppAccess().getGlobalsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__1__Impl
	rule__InkApp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getTasksAssignment_1()); }
	(rule__InkApp__TasksAssignment_1)*
	{ after(grammarAccess.getInkAppAccess().getTasksAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getEntryAssignment_2()); }
	(rule__InkApp__EntryAssignment_2)
	{ after(grammarAccess.getInkAppAccess().getEntryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakExpression__Group__0__Impl
	rule__BreakExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakExpressionAccess().getBreakExpressionAction_0()); }
	()
	{ after(grammarAccess.getBreakExpressionAccess().getBreakExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakExpressionAccess().getBreakAssignment_1()); }
	(rule__BreakExpression__BreakAssignment_1)
	{ after(grammarAccess.getBreakExpressionAccess().getBreakAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group__0__Impl
	rule__VariableType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0()); }
	()
	{ after(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getTypeAssignment_1()); }
	(rule__VariableType__TypeAssignment_1)
	{ after(grammarAccess.getVariableTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVariableExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariableExpression__Group__0__Impl
	rule__GlobalVariableExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableExpressionAccess().getGlobalVariableExpressionAction_0()); }
	()
	{ after(grammarAccess.getGlobalVariableExpressionAccess().getGlobalVariableExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariableExpression__Group__1__Impl
	rule__GlobalVariableExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableExpressionAccess().getGLOBALKeyword_1()); }
	'GLOBAL'
	{ after(grammarAccess.getGlobalVariableExpressionAccess().getGLOBALKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariableExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableExpressionAccess().getVariableAssignment_2()); }
	(rule__GlobalVariableExpression__VariableAssignment_2)
	{ after(grammarAccess.getGlobalVariableExpressionAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryTask__Group__0__Impl
	rule__EntryTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryTaskAccess().getEntryKeyword_0()); }
	'entry'
	{ after(grammarAccess.getEntryTaskAccess().getEntryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryTaskAccess().getTaskAssignment_1()); }
	(rule__EntryTask__TaskAssignment_1)
	{ after(grammarAccess.getEntryTaskAccess().getTaskAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskAction_0()); }
	()
	{ after(grammarAccess.getTaskAccess().getTaskAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_1()); }
	'task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_2()); }
	(rule__Task__NameAssignment_2)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskbodyAssignment_4()); }
	(rule__Task__TaskbodyAssignment_4)
	{ after(grammarAccess.getTaskAccess().getTaskbodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
	()
	{ after(grammarAccess.getIfExpressionAccess().getIfExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfconditionAssignment_3()); }
	(rule__IfExpression__IfconditionAssignment_3)
	{ after(grammarAccess.getIfExpressionAccess().getIfconditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
	rule__IfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_6()); }
	(rule__IfExpression__IfbodyAssignment_6)
	{ after(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__7__Impl
	rule__IfExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__8__Impl
	rule__IfExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_8()); }
	(rule__IfExpression__Group_8__0)*
	{ after(grammarAccess.getIfExpressionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_9()); }
	(rule__IfExpression__Group_9__0)?
	{ after(grammarAccess.getIfExpressionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__0__Impl
	rule__IfExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__1__Impl
	rule__IfExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_8_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__2__Impl
	rule__IfExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_8_2()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__3__Impl
	rule__IfExpression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseifconditionAssignment_8_3()); }
	(rule__IfExpression__ElseifconditionAssignment_8_3)
	{ after(grammarAccess.getIfExpressionAccess().getElseifconditionAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__4__Impl
	rule__IfExpression__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_8_4()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__5__Impl
	rule__IfExpression__Group_8__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_8_5()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__6__Impl
	rule__IfExpression__Group_8__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_6()); }
	(rule__IfExpression__ElseifbodyAssignment_8_6)
	{ after(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_8_7()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_8_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__0__Impl
	rule__IfExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_9_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__1__Impl
	rule__IfExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_9_1()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__2__Impl
	rule__IfExpression__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElsebodyAssignment_9_2()); }
	(rule__IfExpression__ElsebodyAssignment_9_2)
	{ after(grammarAccess.getIfExpressionAccess().getElsebodyAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_9_3()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__0__Impl
	rule__ForExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getForExpressionAction_0()); }
	()
	{ after(grammarAccess.getForExpressionAccess().getForExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__1__Impl
	rule__ForExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getForKeyword_1()); }
	'for'
	{ after(grammarAccess.getForExpressionAccess().getForKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__2__Impl
	rule__ForExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getForExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__3__Impl
	rule__ForExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getInitialAssignment_3()); }
	(rule__ForExpression__InitialAssignment_3)
	{ after(grammarAccess.getForExpressionAccess().getInitialAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__4__Impl
	rule__ForExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForExpressionAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__5__Impl
	rule__ForExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getTestAssignment_5()); }
	(rule__ForExpression__TestAssignment_5)
	{ after(grammarAccess.getForExpressionAccess().getTestAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__6__Impl
	rule__ForExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getForExpressionAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__7__Impl
	rule__ForExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getUpdateAssignment_7()); }
	(rule__ForExpression__UpdateAssignment_7)
	{ after(grammarAccess.getForExpressionAccess().getUpdateAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__8__Impl
	rule__ForExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getForExpressionAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__9__Impl
	rule__ForExpression__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getLeftCurlyBracketKeyword_9()); }
	'{'
	{ after(grammarAccess.getForExpressionAccess().getLeftCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__10__Impl
	rule__ForExpression__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getBodyAssignment_10()); }
	(rule__ForExpression__BodyAssignment_10)
	{ after(grammarAccess.getForExpressionAccess().getBodyAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getForExpressionAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__0__Impl
	rule__WhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
	()
	{ after(grammarAccess.getWhileExpressionAccess().getWhileExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__1__Impl
	rule__WhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
	'while'
	{ after(grammarAccess.getWhileExpressionAccess().getWhileKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__2__Impl
	rule__WhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__3__Impl
	rule__WhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getTestAssignment_3()); }
	(rule__WhileExpression__TestAssignment_3)
	{ after(grammarAccess.getWhileExpressionAccess().getTestAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__4__Impl
	rule__WhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__5__Impl
	rule__WhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getWhileExpressionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__6__Impl
	rule__WhileExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_6()); }
	(rule__WhileExpression__BodyAssignment_6)
	{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getWhileExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group__0__Impl
	rule__BuiltinFunctionCallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getBuiltinFunctionCallExpressionAction_0()); }
	()
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getBuiltinFunctionCallExpressionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group__1__Impl
	rule__BuiltinFunctionCallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getFunctionAssignment_1()); }
	(rule__BuiltinFunctionCallExpression__FunctionAssignment_1)
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group__2__Impl
	rule__BuiltinFunctionCallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group__3__Impl
	rule__BuiltinFunctionCallExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup_3()); }
	(rule__BuiltinFunctionCallExpression__Group_3__0)?
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCallExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group_3__0__Impl
	rule__BuiltinFunctionCallExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAssignment_3_0()); }
	(rule__BuiltinFunctionCallExpression__ParametersAssignment_3_0)
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup_3_1()); }
	(rule__BuiltinFunctionCallExpression__Group_3_1__0)*
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCallExpression__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group_3_1__0__Impl
	rule__BuiltinFunctionCallExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCallExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAssignment_3_1_1()); }
	(rule__BuiltinFunctionCallExpression__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group__0__Impl
	rule__TaskBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getTaskBodyAction_0()); }
	()
	{ after(grammarAccess.getTaskBodyAccess().getTaskBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group__1__Impl
	rule__TaskBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getBodyAssignment_1()); }
	(rule__TaskBody__BodyAssignment_1)*
	{ after(grammarAccess.getTaskBodyAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group__2__Impl
	rule__TaskBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getBodyAssignment_2()); }
	(rule__TaskBody__BodyAssignment_2)*
	{ after(grammarAccess.getTaskBodyAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getAlternatives_3()); }
	(rule__TaskBody__Alternatives_3)
	{ after(grammarAccess.getTaskBodyAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskBody__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group_3_0__0__Impl
	rule__TaskBody__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getNextKeyword_3_0_0()); }
	'next'
	{ after(grammarAccess.getTaskBodyAccess().getNextKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskBody__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskBodyAccess().getNexttaskAssignment_3_0_1()); }
	(rule__TaskBody__NexttaskAssignment_3_0_1)
	{ after(grammarAccess.getTaskBodyAccess().getNexttaskAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementBody__Group__0__Impl
	rule__StatementBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementBodyAccess().getStatementBodyAction_0()); }
	()
	{ after(grammarAccess.getStatementBodyAccess().getStatementBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementBody__Group__1__Impl
	rule__StatementBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementBodyAccess().getBodyAssignment_1()); }
	(rule__StatementBody__BodyAssignment_1)*
	{ after(grammarAccess.getStatementBodyAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementBodyAccess().getBodyAssignment_2()); }
	(rule__StatementBody__BodyAssignment_2)?
	{ after(grammarAccess.getStatementBodyAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getAtomicParserRuleCall_0()); }
	ruleAtomic
	{ after(grammarAccess.getOperationAccess().getAtomicParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_1()); }
	(rule__Operation__Group_1__0)
	{ after(grammarAccess.getOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1__0__Impl
	rule__Operation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOperationAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_1_1()); }
	(rule__Operation__Group_1_1__0)*
	{ after(grammarAccess.getOperationAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1_1__0__Impl
	rule__Operation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperatorAssignment_1_1_0()); }
	(rule__Operation__OperatorAssignment_1_1_0)
	{ after(grammarAccess.getOperationAccess().getOperatorAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightAssignment_1_1_1()); }
	(rule__Operation__RightAssignment_1_1_1)
	{ after(grammarAccess.getOperationAccess().getRightAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__0__Impl
	rule__ArrayDimension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getArrayDimensionAction_0()); }
	()
	{ after(grammarAccess.getArrayDimensionAccess().getArrayDimensionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__1__Impl
	rule__ArrayDimension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayDimensionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__2__Impl
	rule__ArrayDimension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getAlternatives_2()); }
	(rule__ArrayDimension__Alternatives_2)
	{ after(grammarAccess.getArrayDimensionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayDimensionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclerationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclerationExpression__Group__0__Impl
	rule__VariableDeclerationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationExpressionAccess().getTypeAssignment_0()); }
	(rule__VariableDeclerationExpression__TypeAssignment_0)
	{ after(grammarAccess.getVariableDeclerationExpressionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclerationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationExpressionAccess().getAlternatives_1()); }
	(rule__VariableDeclerationExpression__Alternatives_1)
	{ after(grammarAccess.getVariableDeclerationExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclerationExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclerationExpression__Group_1_1__0__Impl
	rule__VariableDeclerationExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationExpressionAccess().getNameAssignment_1_1_0()); }
	(rule__VariableDeclerationExpression__NameAssignment_1_1_0)
	{ after(grammarAccess.getVariableDeclerationExpressionAccess().getNameAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclerationExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionAssignment_1_1_1()); }
		(rule__VariableDeclerationExpression__DimensionAssignment_1_1_1)
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionAssignment_1_1_1()); }
	)
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionAssignment_1_1_1()); }
		(rule__VariableDeclerationExpression__DimensionAssignment_1_1_1)*
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionAssignment_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntegerReferenceAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntegerReferenceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDoubleReferenceAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDoubleReferenceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringReferenceAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringReferenceAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBooleanReferenceAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBooleanReferenceAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getArrayReferenceAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getArrayReferenceAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
	rule__Atomic__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_4_1()); }
	(rule__Atomic__VariableReferenceAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
		(rule__Atomic__DimensionAssignment_4_2)
		{ after(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
	)
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
		(rule__Atomic__DimensionAssignment_4_2)*
		{ after(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_5_1()); }
	(rule__Atomic__VariableReferenceAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InkApp__GlobalsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getGlobalsGlobalVariableExpressionParserRuleCall_0_0()); }
		ruleGlobalVariableExpression
		{ after(grammarAccess.getInkAppAccess().getGlobalsGlobalVariableExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__TasksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getTasksTaskParserRuleCall_1_0()); }
		ruleTask
		{ after(grammarAccess.getInkAppAccess().getTasksTaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__EntryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getEntryEntryTaskParserRuleCall_2_0()); }
		ruleEntryTask
		{ after(grammarAccess.getInkAppAccess().getEntryEntryTaskParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakExpression__BreakAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakExpressionAccess().getBreakBreakKeyword_1_0()); }
		(
			{ before(grammarAccess.getBreakExpressionAccess().getBreakBreakKeyword_1_0()); }
			'break'
			{ after(grammarAccess.getBreakExpressionAccess().getBreakBreakKeyword_1_0()); }
		)
		{ after(grammarAccess.getBreakExpressionAccess().getBreakBreakKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTypeAccess().getTypeAlternatives_1_0()); }
		(rule__VariableType__TypeAlternatives_1_0)
		{ after(grammarAccess.getVariableTypeAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariableExpression__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVariableExpressionAccess().getVariableVariableDeclerationExpressionParserRuleCall_2_0()); }
		ruleVariableDeclerationExpression
		{ after(grammarAccess.getGlobalVariableExpressionAccess().getVariableVariableDeclerationExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__TaskAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryTaskAccess().getTaskTaskParserRuleCall_1_0()); }
		ruleTask
		{ after(grammarAccess.getEntryTaskAccess().getTaskTaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TaskbodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTaskbodyTaskBodyParserRuleCall_4_0()); }
		ruleTaskBody
		{ after(grammarAccess.getTaskAccess().getTaskbodyTaskBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfconditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfconditionOperationExpressionParserRuleCall_3_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getIfExpressionAccess().getIfconditionOperationExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfbodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfbodyStatementBodyParserRuleCall_6_0()); }
		ruleStatementBody
		{ after(grammarAccess.getIfExpressionAccess().getIfbodyStatementBodyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseifconditionAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseifconditionOperationExpressionParserRuleCall_8_3_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseifconditionOperationExpressionParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseifbodyAssignment_8_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseifbodyStatementBodyParserRuleCall_8_6_0()); }
		ruleStatementBody
		{ after(grammarAccess.getIfExpressionAccess().getElseifbodyStatementBodyParserRuleCall_8_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElsebodyAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElsebodyStatementBodyParserRuleCall_9_2_0()); }
		ruleStatementBody
		{ after(grammarAccess.getIfExpressionAccess().getElsebodyStatementBodyParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__InitialAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getInitialOperationExpressionParserRuleCall_3_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getInitialOperationExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__TestAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getTestOperationExpressionParserRuleCall_5_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getTestOperationExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__UpdateAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getUpdateOperationExpressionParserRuleCall_7_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getUpdateOperationExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__BodyAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getBodyStatementBodyParserRuleCall_10_0()); }
		ruleStatementBody
		{ after(grammarAccess.getForExpressionAccess().getBodyStatementBodyParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__TestAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getTestOperationExpressionParserRuleCall_3_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getWhileExpressionAccess().getTestOperationExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getBodyStatementBodyParserRuleCall_6_0()); }
		ruleStatementBody
		{ after(grammarAccess.getWhileExpressionAccess().getBodyStatementBodyParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getFunctionBuiltinFunctionsParserRuleCall_1_0()); }
		ruleBuiltinFunctions
		{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getFunctionBuiltinFunctionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_0_0()); }
		ruleAtomic
		{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCallExpression__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getBuiltinFunctionCallExpressionAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskBodyAccess().getBodyVariableDeclerationExpressionParserRuleCall_1_0()); }
		ruleVariableDeclerationExpression
		{ after(grammarAccess.getTaskBodyAccess().getBodyVariableDeclerationExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskBodyAccess().getBodyBlockExpressionsParserRuleCall_2_0()); }
		ruleBlockExpressions
		{ after(grammarAccess.getTaskBodyAccess().getBodyBlockExpressionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__NexttaskAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskBodyAccess().getNexttaskTaskCrossReference_3_0_1_0()); }
		(
			{ before(grammarAccess.getTaskBodyAccess().getNexttaskTaskIDTerminalRuleCall_3_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskBodyAccess().getNexttaskTaskIDTerminalRuleCall_3_0_1_0_1()); }
		)
		{ after(grammarAccess.getTaskBodyAccess().getNexttaskTaskCrossReference_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskBody__EndtaskAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskBodyAccess().getEndtaskEndKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getTaskBodyAccess().getEndtaskEndKeyword_3_1_0()); }
			'end'
			{ after(grammarAccess.getTaskBodyAccess().getEndtaskEndKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getTaskBodyAccess().getEndtaskEndKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementBodyAccess().getBodyBlockExpressionsParserRuleCall_1_0()); }
		ruleBlockExpressions
		{ after(grammarAccess.getStatementBodyAccess().getBodyBlockExpressionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBody__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementBodyAccess().getBodyBreakExpressionParserRuleCall_2_0()); }
		ruleBreakExpression
		{ after(grammarAccess.getStatementBodyAccess().getBodyBreakExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperatorAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperatorOperatorParserRuleCall_1_1_0_0()); }
		ruleOperator
		{ after(grammarAccess.getOperationAccess().getOperatorOperatorParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__RightAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getRightAtomicParserRuleCall_1_1_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getOperationAccess().getRightAtomicParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__IndexAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__SizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getSizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArrayDimensionAccess().getSizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getTypeVariableTypeParserRuleCall_0_0()); }
		ruleVariableType
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getTypeVariableTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__NameAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclerationExpression__DimensionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionArrayDimensionParserRuleCall_1_1_1_0()); }
		ruleArrayDimension
		{ after(grammarAccess.getVariableDeclerationExpressionAccess().getDimensionArrayDimensionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_3_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableReferenceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__DimensionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionArrayDimensionParserRuleCall_4_2_0()); }
		ruleArrayDimension
		{ after(grammarAccess.getAtomicAccess().getDimensionArrayDimensionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableReferenceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
