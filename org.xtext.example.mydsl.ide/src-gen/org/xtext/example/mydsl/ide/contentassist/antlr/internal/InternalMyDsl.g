/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleInkApp
entryRuleInkApp
:
{ before(grammarAccess.getInkAppRule()); }
	 ruleInkApp
{ after(grammarAccess.getInkAppRule()); } 
	 EOF 
;

// Rule InkApp
ruleInkApp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInkAppAccess().getGroup()); }
		(rule__InkApp__Group__0)
		{ after(grammarAccess.getInkAppAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinFunctions
entryRuleBuiltinFunctions
:
{ before(grammarAccess.getBuiltinFunctionsRule()); }
	 ruleBuiltinFunctions
{ after(grammarAccess.getBuiltinFunctionsRule()); } 
	 EOF 
;

// Rule BuiltinFunctions
ruleBuiltinFunctions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinFunctionsAccess().getPrintKeyword()); }
		'print'
		{ after(grammarAccess.getBuiltinFunctionsAccess().getPrintKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreak
entryRuleBreak
:
{ before(grammarAccess.getBreakRule()); }
	 ruleBreak
{ after(grammarAccess.getBreakRule()); } 
	 EOF 
;

// Rule Break
ruleBreak 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakAccess().getGroup()); }
		(rule__Break__Group__0)
		{ after(grammarAccess.getBreakAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableType
entryRuleVariableType
:
{ before(grammarAccess.getVariableTypeRule()); }
	 ruleVariableType
{ after(grammarAccess.getVariableTypeRule()); } 
	 EOF 
;

// Rule VariableType
ruleVariableType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTypeAccess().getAlternatives()); }
		(rule__VariableType__Alternatives)
		{ after(grammarAccess.getVariableTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVariable
entryRuleGlobalVariable
:
{ before(grammarAccess.getGlobalVariableRule()); }
	 ruleGlobalVariable
{ after(grammarAccess.getGlobalVariableRule()); } 
	 EOF 
;

// Rule GlobalVariable
ruleGlobalVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVariableAccess().getGroup()); }
		(rule__GlobalVariable__Group__0)
		{ after(grammarAccess.getGlobalVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntryTask
entryRuleEntryTask
:
{ before(grammarAccess.getEntryTaskRule()); }
	 ruleEntryTask
{ after(grammarAccess.getEntryTaskRule()); } 
	 EOF 
;

// Rule EntryTask
ruleEntryTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntryTaskAccess().getGroup()); }
		(rule__EntryTask__Group__0)
		{ after(grammarAccess.getEntryTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfExpression
entryRuleIfExpression
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
		(rule__IfExpression__Group__0)
		{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForExpression
entryRuleForExpression
:
{ before(grammarAccess.getForExpressionRule()); }
	 ruleForExpression
{ after(grammarAccess.getForExpressionRule()); } 
	 EOF 
;

// Rule ForExpression
ruleForExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForExpressionAccess().getGroup()); }
		(rule__ForExpression__Group__0)
		{ after(grammarAccess.getForExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileExpression
entryRuleWhileExpression
:
{ before(grammarAccess.getWhileExpressionRule()); }
	 ruleWhileExpression
{ after(grammarAccess.getWhileExpressionRule()); } 
	 EOF 
;

// Rule WhileExpression
ruleWhileExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getGroup()); }
		(rule__WhileExpression__Group__0)
		{ after(grammarAccess.getWhileExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationExpression
entryRuleOperationExpression
:
{ before(grammarAccess.getOperationExpressionRule()); }
	 ruleOperationExpression
{ after(grammarAccess.getOperationExpressionRule()); } 
	 EOF 
;

// Rule OperationExpression
ruleOperationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationExpressionAccess().getOperationParserRuleCall()); }
		ruleOperation
		{ after(grammarAccess.getOperationExpressionAccess().getOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayDimension
entryRuleArrayDimension
:
{ before(grammarAccess.getArrayDimensionRule()); }
	 ruleArrayDimension
{ after(grammarAccess.getArrayDimensionRule()); } 
	 EOF 
;

// Rule ArrayDimension
ruleArrayDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getGroup()); }
		(rule__ArrayDimension__Group__0)
		{ after(grammarAccess.getArrayDimensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDecleration
entryRuleVariableDecleration
:
{ before(grammarAccess.getVariableDeclerationRule()); }
	 ruleVariableDecleration
{ after(grammarAccess.getVariableDeclerationRule()); } 
	 EOF 
;

// Rule VariableDecleration
ruleVariableDecleration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getGroup()); }
		(rule__VariableDecleration__Group__0)
		{ after(grammarAccess.getVariableDeclerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionParameter
entryRuleFunctionParameter
:
{ before(grammarAccess.getFunctionParameterRule()); }
	 ruleFunctionParameter
{ after(grammarAccess.getFunctionParameterRule()); } 
	 EOF 
;

// Rule FunctionParameter
ruleFunctionParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionParameterAccess().getGroup()); }
		(rule__FunctionParameter__Group__0)
		{ after(grammarAccess.getFunctionParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicOrFunctionCall
entryRuleAtomicOrFunctionCall
:
{ before(grammarAccess.getAtomicOrFunctionCallRule()); }
	 ruleAtomicOrFunctionCall
{ after(grammarAccess.getAtomicOrFunctionCallRule()); } 
	 EOF 
;

// Rule AtomicOrFunctionCall
ruleAtomicOrFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicOrFunctionCallAccess().getAlternatives()); }
		(rule__AtomicOrFunctionCall__Alternatives)
		{ after(grammarAccess.getAtomicOrFunctionCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuiltinFunctionCall
entryRuleBuiltinFunctionCall
:
{ before(grammarAccess.getBuiltinFunctionCallRule()); }
	 ruleBuiltinFunctionCall
{ after(grammarAccess.getBuiltinFunctionCallRule()); } 
	 EOF 
;

// Rule BuiltinFunctionCall
ruleBuiltinFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuiltinFunctionCallAccess().getGroup()); }
		(rule__BuiltinFunctionCall__Group__0)
		{ after(grammarAccess.getBuiltinFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractFunctionCall
entryRuleAbstractFunctionCall
:
{ before(grammarAccess.getAbstractFunctionCallRule()); }
	 ruleAbstractFunctionCall
{ after(grammarAccess.getAbstractFunctionCallRule()); } 
	 EOF 
;

// Rule AbstractFunctionCall
ruleAbstractFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractFunctionCallAccess().getAlternatives()); }
		(rule__AbstractFunctionCall__Alternatives)
		{ after(grammarAccess.getAbstractFunctionCallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_0()); }
		'-'
		{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_1()); }
		'+'
		{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_2()); }
		'/'
		{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_3()); }
		'*'
		{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_6()); }
		'=='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
		'!='
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_8()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_9()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignKeyword_10()); }
		'='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getANDKeyword_11()); }
		'AND'
		{ after(grammarAccess.getOperatorAccess().getANDKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getORKeyword_12()); }
		'OR'
		{ after(grammarAccess.getOperatorAccess().getORKeyword_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTypeAccess().getGroup_0()); }
		(rule__VariableType__Group_0__0)
		{ after(grammarAccess.getVariableTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getGroup_1()); }
		(rule__VariableType__Group_1__0)
		{ after(grammarAccess.getVariableTypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableTypeAccess().getGroup_2()); }
		(rule__VariableType__Group_2__0)
		{ after(grammarAccess.getVariableTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getGroup_5_0()); }
		(rule__Task__Group_5_0__0)
		{ after(grammarAccess.getTaskAccess().getGroup_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskAccess().getEndKeyword_5_1()); }
		'end'
		{ after(grammarAccess.getTaskAccess().getEndKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperationExpressionParserRuleCall_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getExpressionAccess().getOperationExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1()); }
		ruleIfExpression
		{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getForExpressionParserRuleCall_2()); }
		ruleForExpression
		{ after(grammarAccess.getExpressionAccess().getForExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getWhileExpressionParserRuleCall_3()); }
		ruleWhileExpression
		{ after(grammarAccess.getExpressionAccess().getWhileExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBuiltinFunctionCallParserRuleCall_4()); }
		ruleBuiltinFunctionCall
		{ after(grammarAccess.getExpressionAccess().getBuiltinFunctionCallParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getIndexAssignment_2_0()); }
		(rule__ArrayDimension__IndexAssignment_2_0)
		{ after(grammarAccess.getArrayDimensionAccess().getIndexAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayDimensionAccess().getSizeAssignment_2_1()); }
		(rule__ArrayDimension__SizeAssignment_2_1)
		{ after(grammarAccess.getArrayDimensionAccess().getSizeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getNameAssignment_1_0()); }
		(rule__VariableDecleration__NameAssignment_1_0)
		{ after(grammarAccess.getVariableDeclerationAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getGroup_1_1()); }
		(rule__VariableDecleration__Group_1_1__0)
		{ after(grammarAccess.getVariableDeclerationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
		(rule__Atomic__Group_4__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
		(rule__Atomic__Group_5__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicOrFunctionCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicOrFunctionCallAccess().getAtomicParserRuleCall_0()); }
		ruleAtomic
		{ after(grammarAccess.getAtomicOrFunctionCallAccess().getAtomicParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicOrFunctionCallAccess().getAbstractFunctionCallParserRuleCall_1()); }
		ruleAbstractFunctionCall
		{ after(grammarAccess.getAtomicOrFunctionCallAccess().getAbstractFunctionCallParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractFunctionCall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractFunctionCallAccess().getFunctionCallParserRuleCall_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getAbstractFunctionCallAccess().getFunctionCallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractFunctionCallAccess().getBuiltinFunctionCallParserRuleCall_1()); }
		ruleBuiltinFunctionCall
		{ after(grammarAccess.getAbstractFunctionCallAccess().getBuiltinFunctionCallParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__0__Impl
	rule__InkApp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getGlobalsAssignment_0()); }
	(rule__InkApp__GlobalsAssignment_0)*
	{ after(grammarAccess.getInkAppAccess().getGlobalsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__1__Impl
	rule__InkApp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getTasksAssignment_1()); }
	(rule__InkApp__TasksAssignment_1)*
	{ after(grammarAccess.getInkAppAccess().getTasksAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InkApp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInkAppAccess().getEntryAssignment_2()); }
	(rule__InkApp__EntryAssignment_2)
	{ after(grammarAccess.getInkAppAccess().getEntryAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Break__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Break__Group__0__Impl
	rule__Break__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Break__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakAccess().getBreakAction_0()); }
	()
	{ after(grammarAccess.getBreakAccess().getBreakAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Break__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Break__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Break__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakAccess().getBreakAssignment_1()); }
	(rule__Break__BreakAssignment_1)
	{ after(grammarAccess.getBreakAccess().getBreakAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_0__0__Impl
	rule__VariableType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0_0()); }
	()
	{ after(grammarAccess.getVariableTypeAccess().getVariableTypeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getStringKeyword_0_1()); }
	'string'
	{ after(grammarAccess.getVariableTypeAccess().getStringKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_1__0__Impl
	rule__VariableType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getVariableTypeAction_1_0()); }
	()
	{ after(grammarAccess.getVariableTypeAccess().getVariableTypeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getIntegerKeyword_1_1()); }
	'integer'
	{ after(grammarAccess.getVariableTypeAccess().getIntegerKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_2__0__Impl
	rule__VariableType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getVariableTypeAction_2_0()); }
	()
	{ after(grammarAccess.getVariableTypeAccess().getVariableTypeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableTypeAccess().getBooleanKeyword_2_1()); }
	'boolean'
	{ after(grammarAccess.getVariableTypeAccess().getBooleanKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariable__Group__0__Impl
	rule__GlobalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableAccess().getGlobalVariableAction_0()); }
	()
	{ after(grammarAccess.getGlobalVariableAccess().getGlobalVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariable__Group__1__Impl
	rule__GlobalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableAccess().getGLOBALKeyword_1()); }
	'GLOBAL'
	{ after(grammarAccess.getGlobalVariableAccess().getGLOBALKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVariableAccess().getVariableAssignment_2()); }
	(rule__GlobalVariable__VariableAssignment_2)
	{ after(grammarAccess.getGlobalVariableAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntryTask__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryTask__Group__0__Impl
	rule__EntryTask__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryTaskAccess().getEntryKeyword_0()); }
	'entry'
	{ after(grammarAccess.getEntryTaskAccess().getEntryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntryTask__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntryTaskAccess().getTaskAssignment_1()); }
	(rule__EntryTask__TaskAssignment_1)
	{ after(grammarAccess.getEntryTaskAccess().getTaskAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
	'task'
	{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getBodyAssignment_3()); }
	(rule__Task__BodyAssignment_3)*
	{ after(grammarAccess.getTaskAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getBodyAssignment_4()); }
	(rule__Task__BodyAssignment_4)*
	{ after(grammarAccess.getTaskAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getAlternatives_5()); }
	(rule__Task__Alternatives_5)
	{ after(grammarAccess.getTaskAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5_0__0__Impl
	rule__Task__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNextKeyword_5_0_0()); }
	'next'
	{ after(grammarAccess.getTaskAccess().getNextKeyword_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskAssignment_5_0_1()); }
	(rule__Task__TaskAssignment_5_0_1)
	{ after(grammarAccess.getTaskAccess().getTaskAssignment_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfconditionAssignment_2()); }
	(rule__IfExpression__IfconditionAssignment_2)
	{ after(grammarAccess.getIfExpressionAccess().getIfconditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__5__Impl
	rule__IfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_5()); }
	(rule__IfExpression__IfbodyAssignment_5)*
	{ after(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__6__Impl
	rule__IfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_6()); }
	(rule__IfExpression__IfbodyAssignment_6)?
	{ after(grammarAccess.getIfExpressionAccess().getIfbodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__7__Impl
	rule__IfExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__8__Impl
	rule__IfExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_8()); }
	(rule__IfExpression__Group_8__0)*
	{ after(grammarAccess.getIfExpressionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getGroup_9()); }
	(rule__IfExpression__Group_9__0)?
	{ after(grammarAccess.getIfExpressionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__0__Impl
	rule__IfExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__1__Impl
	rule__IfExpression__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_8_1()); }
	'if'
	{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__2__Impl
	rule__IfExpression__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_8_2()); }
	'('
	{ after(grammarAccess.getIfExpressionAccess().getLeftParenthesisKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__3__Impl
	rule__IfExpression__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseconditionAssignment_8_3()); }
	(rule__IfExpression__ElseconditionAssignment_8_3)
	{ after(grammarAccess.getIfExpressionAccess().getElseconditionAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__4__Impl
	rule__IfExpression__Group_8__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_8_4()); }
	')'
	{ after(grammarAccess.getIfExpressionAccess().getRightParenthesisKeyword_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__5__Impl
	rule__IfExpression__Group_8__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_8_5()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_8_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__6__Impl
	rule__IfExpression__Group_8__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_6()); }
	(rule__IfExpression__ElseifbodyAssignment_8_6)*
	{ after(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__7__Impl
	rule__IfExpression__Group_8__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_7()); }
	(rule__IfExpression__ElseifbodyAssignment_8_7)?
	{ after(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_8_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_8__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_8__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_8_8()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_8_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__0__Impl
	rule__IfExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_9_0()); }
	'else'
	{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__1__Impl
	rule__IfExpression__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_9_1()); }
	'{'
	{ after(grammarAccess.getIfExpressionAccess().getLeftCurlyBracketKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__2__Impl
	rule__IfExpression__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElsebodyAssignment_9_2()); }
	(rule__IfExpression__ElsebodyAssignment_9_2)*
	{ after(grammarAccess.getIfExpressionAccess().getElsebodyAssignment_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__3__Impl
	rule__IfExpression__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_9_3()); }
	(rule__IfExpression__ElseifbodyAssignment_9_3)?
	{ after(grammarAccess.getIfExpressionAccess().getElseifbodyAssignment_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfExpression__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_9_4()); }
	'}'
	{ after(grammarAccess.getIfExpressionAccess().getRightCurlyBracketKeyword_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__0__Impl
	rule__ForExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForExpressionAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__1__Impl
	rule__ForExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__2__Impl
	rule__ForExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getInitialAssignment_2()); }
	(rule__ForExpression__InitialAssignment_2)
	{ after(grammarAccess.getForExpressionAccess().getInitialAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__3__Impl
	rule__ForExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForExpressionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__4__Impl
	rule__ForExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getTestAssignment_4()); }
	(rule__ForExpression__TestAssignment_4)
	{ after(grammarAccess.getForExpressionAccess().getTestAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__5__Impl
	rule__ForExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForExpressionAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__6__Impl
	rule__ForExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getUpdateAssignment_6()); }
	(rule__ForExpression__UpdateAssignment_6)
	{ after(grammarAccess.getForExpressionAccess().getUpdateAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__7__Impl
	rule__ForExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__8__Impl
	rule__ForExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getForExpressionAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__9__Impl
	rule__ForExpression__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getBodyAssignment_9()); }
	(rule__ForExpression__BodyAssignment_9)*
	{ after(grammarAccess.getForExpressionAccess().getBodyAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__10__Impl
	rule__ForExpression__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getBodyAssignment_10()); }
	(rule__ForExpression__BodyAssignment_10)?
	{ after(grammarAccess.getForExpressionAccess().getBodyAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForExpression__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForExpressionAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getForExpressionAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__0__Impl
	rule__WhileExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileExpressionAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__1__Impl
	rule__WhileExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__2__Impl
	rule__WhileExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getTestAssignment_2()); }
	(rule__WhileExpression__TestAssignment_2)
	{ after(grammarAccess.getWhileExpressionAccess().getTestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__3__Impl
	rule__WhileExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__4__Impl
	rule__WhileExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getWhileExpressionAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__5__Impl
	rule__WhileExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
	(rule__WhileExpression__BodyAssignment_5)*
	{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__6__Impl
	rule__WhileExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getBodyAssignment_6()); }
	(rule__WhileExpression__BodyAssignment_6)?
	{ after(grammarAccess.getWhileExpressionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getWhileExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getAtomicParserRuleCall_0()); }
	ruleAtomic
	{ after(grammarAccess.getOperationAccess().getAtomicParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_1()); }
	(rule__Operation__Group_1__0)
	{ after(grammarAccess.getOperationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1__0__Impl
	rule__Operation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOperationAccess().getOperationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_1_1()); }
	(rule__Operation__Group_1_1__0)*
	{ after(grammarAccess.getOperationAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1_1__0__Impl
	rule__Operation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getOperatorAssignment_1_1_0()); }
	(rule__Operation__OperatorAssignment_1_1_0)
	{ after(grammarAccess.getOperationAccess().getOperatorAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getRightAssignment_1_1_1()); }
	(rule__Operation__RightAssignment_1_1_1)
	{ after(grammarAccess.getOperationAccess().getRightAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__0__Impl
	rule__ArrayDimension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getArrayDimensionAction_0()); }
	()
	{ after(grammarAccess.getArrayDimensionAccess().getArrayDimensionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__1__Impl
	rule__ArrayDimension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayDimensionAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__2__Impl
	rule__ArrayDimension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getAlternatives_2()); }
	(rule__ArrayDimension__Alternatives_2)
	{ after(grammarAccess.getArrayDimensionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayDimension__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayDimensionAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayDimensionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecleration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecleration__Group__0__Impl
	rule__VariableDecleration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationAccess().getTypeAssignment_0()); }
	(rule__VariableDecleration__TypeAssignment_0)
	{ after(grammarAccess.getVariableDeclerationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecleration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationAccess().getAlternatives_1()); }
	(rule__VariableDecleration__Alternatives_1)
	{ after(grammarAccess.getVariableDeclerationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecleration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecleration__Group_1_1__0__Impl
	rule__VariableDecleration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclerationAccess().getNameAssignment_1_1_0()); }
	(rule__VariableDecleration__NameAssignment_1_1_0)
	{ after(grammarAccess.getVariableDeclerationAccess().getNameAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecleration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getDimensionAssignment_1_1_1()); }
		(rule__VariableDecleration__DimensionAssignment_1_1_1)
		{ after(grammarAccess.getVariableDeclerationAccess().getDimensionAssignment_1_1_1()); }
	)
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getDimensionAssignment_1_1_1()); }
		(rule__VariableDecleration__DimensionAssignment_1_1_1)*
		{ after(grammarAccess.getVariableDeclerationAccess().getDimensionAssignment_1_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameter__Group__0__Impl
	rule__FunctionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParameterAccess().getTypeAssignment_0()); }
	(rule__FunctionParameter__TypeAssignment_0)
	{ after(grammarAccess.getFunctionParameterAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParameterAccess().getNameAssignment_1()); }
	(rule__FunctionParameter__NameAssignment_1)
	{ after(grammarAccess.getFunctionParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntegerReferenceAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntegerReferenceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDoubleReferenceAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDoubleReferenceAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringReferenceAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringReferenceAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBooleanReferenceAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBooleanReferenceAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getArrayReferenceAction_4_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getArrayReferenceAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__1__Impl
	rule__Atomic__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_4_1()); }
	(rule__Atomic__VariableReferenceAssignment_4_1)
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
		(rule__Atomic__DimensionAssignment_4_2)
		{ after(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
	)
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
		(rule__Atomic__DimensionAssignment_4_2)*
		{ after(grammarAccess.getAtomicAccess().getDimensionAssignment_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAction_5_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_5_1()); }
	(rule__Atomic__VariableReferenceAssignment_5_1)
	{ after(grammarAccess.getAtomicAccess().getVariableReferenceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1()); }
	(rule__FunctionCall__FunctionAssignment_1)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
	rule__FunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3()); }
	(rule__FunctionCall__Group_3__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__0__Impl
	rule__FunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_0()); }
	(rule__FunctionCall__ParametersAssignment_3_0)
	{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
	(rule__FunctionCall__Group_3_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1__0__Impl
	rule__FunctionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_1_1()); }
	(rule__FunctionCall__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group__0__Impl
	rule__BuiltinFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getBuiltinFunctionCallAction_0()); }
	()
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getBuiltinFunctionCallAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group__1__Impl
	rule__BuiltinFunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getFunctionAssignment_1()); }
	(rule__BuiltinFunctionCall__FunctionAssignment_1)
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getFunctionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group__2__Impl
	rule__BuiltinFunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group__3__Impl
	rule__BuiltinFunctionCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getGroup_3()); }
	(rule__BuiltinFunctionCall__Group_3__0)?
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCall__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group_3__0__Impl
	rule__BuiltinFunctionCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getParametersAssignment_3_0()); }
	(rule__BuiltinFunctionCall__ParametersAssignment_3_0)
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getParametersAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getGroup_3_1()); }
	(rule__BuiltinFunctionCall__Group_3_1__0)*
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BuiltinFunctionCall__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group_3_1__0__Impl
	rule__BuiltinFunctionCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BuiltinFunctionCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuiltinFunctionCallAccess().getParametersAssignment_3_1_1()); }
	(rule__BuiltinFunctionCall__ParametersAssignment_3_1_1)
	{ after(grammarAccess.getBuiltinFunctionCallAccess().getParametersAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InkApp__GlobalsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getGlobalsGlobalVariableParserRuleCall_0_0()); }
		ruleGlobalVariable
		{ after(grammarAccess.getInkAppAccess().getGlobalsGlobalVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__TasksAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getTasksTaskParserRuleCall_1_0()); }
		ruleTask
		{ after(grammarAccess.getInkAppAccess().getTasksTaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InkApp__EntryAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInkAppAccess().getEntryEntryTaskParserRuleCall_2_0()); }
		ruleEntryTask
		{ after(grammarAccess.getInkAppAccess().getEntryEntryTaskParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Break__BreakAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakAccess().getBreakBreakKeyword_1_0()); }
		(
			{ before(grammarAccess.getBreakAccess().getBreakBreakKeyword_1_0()); }
			'break'
			{ after(grammarAccess.getBreakAccess().getBreakBreakKeyword_1_0()); }
		)
		{ after(grammarAccess.getBreakAccess().getBreakBreakKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVariable__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVariableAccess().getVariableVariableDeclerationParserRuleCall_2_0()); }
		ruleVariableDecleration
		{ after(grammarAccess.getGlobalVariableAccess().getVariableVariableDeclerationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntryTask__TaskAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntryTaskAccess().getTaskTaskParserRuleCall_1_0()); }
		ruleTask
		{ after(grammarAccess.getEntryTaskAccess().getTaskTaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getBodyVariableDeclerationParserRuleCall_3_0()); }
		ruleVariableDecleration
		{ after(grammarAccess.getTaskAccess().getBodyVariableDeclerationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getBodyExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getTaskAccess().getBodyExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TaskAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTaskTaskCrossReference_5_0_1_0()); }
		(
			{ before(grammarAccess.getTaskAccess().getTaskTaskIDTerminalRuleCall_5_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTaskAccess().getTaskTaskIDTerminalRuleCall_5_0_1_0_1()); }
		)
		{ after(grammarAccess.getTaskAccess().getTaskTaskCrossReference_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfconditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfconditionOperationExpressionParserRuleCall_2_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getIfExpressionAccess().getIfconditionOperationExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfbodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfbodyExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getIfbodyExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__IfbodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getIfbodyBreakParserRuleCall_6_0()); }
		ruleBreak
		{ after(grammarAccess.getIfExpressionAccess().getIfbodyBreakParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseconditionAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseconditionOperationExpressionParserRuleCall_8_3_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseconditionOperationExpressionParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseifbodyAssignment_8_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseifbodyExpressionParserRuleCall_8_6_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getElseifbodyExpressionParserRuleCall_8_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseifbodyAssignment_8_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseifbodyBreakParserRuleCall_8_7_0()); }
		ruleBreak
		{ after(grammarAccess.getIfExpressionAccess().getElseifbodyBreakParserRuleCall_8_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElsebodyAssignment_9_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElsebodyExpressionParserRuleCall_9_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfExpressionAccess().getElsebodyExpressionParserRuleCall_9_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseifbodyAssignment_9_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfExpressionAccess().getElseifbodyBreakParserRuleCall_9_3_0()); }
		ruleBreak
		{ after(grammarAccess.getIfExpressionAccess().getElseifbodyBreakParserRuleCall_9_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__InitialAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getInitialOperationExpressionParserRuleCall_2_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getInitialOperationExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__TestAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getTestOperationExpressionParserRuleCall_4_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getTestOperationExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__UpdateAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getUpdateOperationExpressionParserRuleCall_6_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getForExpressionAccess().getUpdateOperationExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__BodyAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getBodyExpressionParserRuleCall_9_0()); }
		ruleExpression
		{ after(grammarAccess.getForExpressionAccess().getBodyExpressionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForExpression__BodyAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForExpressionAccess().getBodyBreakParserRuleCall_10_0()); }
		ruleBreak
		{ after(grammarAccess.getForExpressionAccess().getBodyBreakParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__TestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getTestOperationExpressionParserRuleCall_2_0()); }
		ruleOperationExpression
		{ after(grammarAccess.getWhileExpressionAccess().getTestOperationExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileExpressionAccess().getBodyExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileExpression__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileExpressionAccess().getBodyBreakParserRuleCall_6_0()); }
		ruleBreak
		{ after(grammarAccess.getWhileExpressionAccess().getBodyBreakParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__OperatorAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getOperatorOperatorParserRuleCall_1_1_0_0()); }
		ruleOperator
		{ after(grammarAccess.getOperationAccess().getOperatorOperatorParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__RightAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getRightAtomicOrFunctionCallParserRuleCall_1_1_1_0()); }
		ruleAtomicOrFunctionCall
		{ after(grammarAccess.getOperationAccess().getRightAtomicOrFunctionCallParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__IndexAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getArrayDimensionAccess().getIndexVariableSymbolCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimension__SizeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayDimensionAccess().getSizeINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArrayDimensionAccess().getSizeINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getTypeVariableTypeParserRuleCall_0_0()); }
		ruleVariableType
		{ after(grammarAccess.getVariableDeclerationAccess().getTypeVariableTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__NameAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclerationAccess().getNameIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecleration__DimensionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclerationAccess().getDimensionArrayDimensionParserRuleCall_1_1_1_0()); }
		ruleArrayDimension
		{ after(grammarAccess.getVariableDeclerationAccess().getDimensionArrayDimensionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParameterAccess().getTypeVariableTypeParserRuleCall_0_0()); }
		ruleVariableType
		{ after(grammarAccess.getFunctionParameterAccess().getTypeVariableTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_3_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableReferenceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_4_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__DimensionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getDimensionArrayDimensionParserRuleCall_4_2_0()); }
		ruleArrayDimension
		{ after(grammarAccess.getAtomicAccess().getDimensionArrayDimensionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VariableReferenceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getAtomicAccess().getVariableReferenceVariableSymbolCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionDefinitionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionDefinitionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParametersAtomicParserRuleCall_3_0_0()); }
		ruleAtomic
		{ after(grammarAccess.getFunctionCallAccess().getParametersAtomicParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getFunctionCallAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallAccess().getFunctionBuiltinFunctionsParserRuleCall_1_0()); }
		ruleBuiltinFunctions
		{ after(grammarAccess.getBuiltinFunctionCallAccess().getFunctionBuiltinFunctionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__ParametersAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallAccess().getParametersAtomicParserRuleCall_3_0_0()); }
		ruleAtomic
		{ after(grammarAccess.getBuiltinFunctionCallAccess().getParametersAtomicParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BuiltinFunctionCall__ParametersAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuiltinFunctionCallAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
		ruleAtomic
		{ after(grammarAccess.getBuiltinFunctionCallAccess().getParametersAtomicParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
